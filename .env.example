# Example environment settings file for opie SaaS
# Copy this file to `.env` and fill in your real secrets for local development or production.
# DO NOT commit secrets to source control!

###############################
# Django Core Settings
###############################
DJANGO_SETTINGS_MODULE=bh_opie.settings_local
SECRET_KEY="your-django-secret-key"
# DATABASE_URL examples (uncomment and edit as needed):
# DATABASE_URL="postgresql://user:password@localhost:5432/db_name"

###############################
# Database Configuration
###############################
DJANGO_DATABASE_NAME=bh_opie
DJANGO_DATABASE_USER=postgres
DJANGO_DATABASE_PASSWORD=postgres
DJANGO_DATABASE_HOST=localhost
DJANGO_DATABASE_PORT=5432

# Test Database Configuration
TEST_DATABASE_NAME=test_bh_opie
TEST_DATABASE_USER=postgres
TEST_DATABASE_PASSWORD=postgres
TEST_DATABASE_HOST=localhost
TEST_DATABASE_PORT=5432

###############################
# General Settings
###############################
DEBUG=True
ENABLE_DEBUG_TOOLBAR=True

###############################
# Google Cloud Storage (GCS)
###############################
USE_GCS_MEDIA=True
GCS_BUCKET_NAME="your-gcs-media-bucket"
GCS_DOCS_BUCKET_NAME="your-gcs-docs-bucket"
# Static files bucket (admin/css/js)
GCS_STATIC_BUCKET_NAME="your-gcs-static-bucket"
GCS_PROJECT_ID="your-gcp-project-id"
GCS_CREDENTIALS=""
GCS_SERVICE_ACCOUNT_FILE=".gcp/creds/storage.json"

# GCS Signing Configuration
# Service account impersonation for signed URLs (required for production)
GCS_IMPERSONATION_TARGET="gcs-signing-sa@your-gcp-project-id.iam.gserviceaccount.com"
# Fallback: Base64-encoded service account key (if impersonation not available)
# GCP_SA_KEY_BASE64="your-base64-encoded-service-account-key"

###############################
# Deployment Configuration
###############################
# GCP Project and Docker Configuration
PROJECT_ID="your-gcp-project-id"
IMAGE_NAME_WEB="opie-web"
IMAGE_NAME_Y_PROVIDER="opie-y-provider"
ARTIFACT_REGISTRY_URL="australia-southeast1-docker.pkg.dev/your-project/containers"

# Database Configuration (Production)
DB_USER="your-db-user"
DB_PASS="your-db-password"

# Deployment Flags
FORCE_GCP_DETECTION=1
SKIP_COLLECTSTATIC=1
SKIP_DATA_LOADING=1
SKIP_MIGRATIONS=0

# Docker Configuration
DOCKER_USER="1000:1000"
LOG_LEVEL="info"

###############################
# Nango Integration Configuration
###############################
# Nango Core Settings
NANGO_ENCRYPTION_KEY="your-nango-encryption-key"
NANGO_PUBLIC_URL="https://nango.yourdomain.com"
NANGO_SERVER_URL="https://nango.yourdomain.com"
NANGO_PUBLIC_SERVER_URL="https://nango.yourdomain.com"
NANGO_PUBLIC_CONNECT_URL="https://connect.yourdomain.com"
NANGO_HOSTPORT="https://nango.yourdomain.com"
NANGO_SERVER_WEBSOCKETS_PATH="/"

# Nango Database Configuration
NANGO_DB_SSL=false
NANGO_DB_ADDITIONAL_SCHEMAS=""
NANGO_DB_POOL_MIN=1
NANGO_DB_POOL_MAX=10

# Nango Dashboard
NANGO_DASHBOARD_USERNAME="admin"
NANGO_DASHBOARD_PASSWORD="your-dashboard-password"
NANGO_DASHBOARD_EMAIL="admin@yourdomain.com"

# Nango Logging
NANGO_LOGS_ENABLED=false
NANGO_LOGS_ES_URL="http://elasticsearch:9200"
NANGO_LOGS_ES_USER=""
NANGO_LOGS_ES_PWD=""

# Nango Security
NANGO_SERVER_CSP_FRAME_ANCESTORS="'self' https://app.yourdomain.com https://*.yourdomain.com"
NANGO_SERVER_X_FRAME_OPTIONS="SAMEORIGIN"
FLAG_AUTH_ENABLED=true

###############################
# Collaboration & Y-Provider Configuration
###############################
COLLABORATION_SERVER_SECRET="your-collaboration-secret"
Y_PROVIDER_API_KEY="your-y-provider-api-key"
COLLABORATION_BACKEND_BASE_URL="http://localhost:8000"
COLLABORATION_SERVER_ORIGIN="http://localhost:3000"
COLLABORATION_LOGGING=true

###############################
# Core Django Settings
###############################
# PGVector Configuration
PGVECTOR_TABLE_PREFIX="_vector_table"

# Email Branding
EMAIL_BRAND_NAME="Ben Heath SaaS"
EMAIL_LOGO_IMG="https://benheath.com/static/logo.png"
EMAIL_FROM="noreply@benheath.com"

# Nango Integration
NANGO_SECRET_KEY="nango_secret_key"
NANGO_HOST="https://nango.opie.sh"

# System API Key
SYSTEM_API_KEY="your-system-api-key"

# JWT Configuration
SIMPLE_JWT_SIGNING_KEY="<a-complex-signing-key>"

# Session Configuration
SESSION_COOKIE_DOMAIN=""

# Account Settings
ACCOUNT_EMAIL_VERIFICATION="none"

###############################
# OAuth & Social Login Configuration
###############################
# Google OAuth
GOOGLE_CLIENT_ID="your-google-client-id"
GOOGLE_SECRET_ID="your-google-secret-id"
GOOGLE_CLIENT_SECRET="your-google-client-secret"
GOOGLE_REDIRECT_URI="http://localhost:8000/integrations/gdrive/oauth/callback/"

# Microsoft OAuth
MICROSOFT_CLIENT_ID="your-microsoft-client-id"
MICROSOFT_SECRET_ID="your-microsoft-secret-id"
MICROSOFT_TENANT_ID="your-microsoft-tenant-id"

###############################
# Email Configuration
###############################
SERVER_EMAIL="noreply@localhost:8000"
DEFAULT_FROM_EMAIL="hello@benheath.com.au"
EMAIL_BACKEND="django.core.mail.backends.console.EmailBackend"

# Mailgun Configuration
MAILGUN_API_KEY=""
MAILGUN_SENDER_DOMAIN=""

###############################
# Redis & Cache Configuration
###############################
REDIS_CACHE_URL="redis://localhost:6379/2"
REDIS_TLS_URL=""
REDIS_HOST="localhost"
REDIS_PORT="6379"

###############################
# Analytics & Monitoring
###############################
GOOGLE_ANALYTICS_ID=""
SENTRY_DSN=""

###############################
# AI & Machine Learning Configuration
###############################
# AI Images
AI_IMAGES_STABILITY_AI_API_KEY=""
AI_IMAGES_OPENAI_API_KEY=""

# AI Chat
AI_CHAT_OPENAI_API_KEY=""
AI_CHAT_OPENAI_MODEL="gpt-4o"

# General AI Settings
AI_API_KEY=""
AI_BASE_URL=""
AI_MODEL=""
AI_ALLOW_REACH_FROM="authenticated"

###############################
# Slack Integration Configuration
###############################
SLACK_BOT_TOKEN=""
SLACK_SCOPES="app_mentions:read,chat:write"
SLACK_BOT_USER_ID=""
SLACK_REDIRECT_URI="https://yourdomain.com/slack/oauth/callback/"

###############################
# Advanced Features Configuration
###############################
# Vault Tables
VAULT_MEMORY_TABLE="vault_memory"
VAULT_STORAGE_TABLE="vault_storage_sessions"
VAULT_VECTOR_TABLE="vault_vector_table"

# Y-Provider Configuration
Y_PROVIDER_API_BASE_URL=""

# Conversion API Configuration
CONVERSION_API_ENDPOINT="convert-markdown"
CONVERSION_API_CONTENT_FIELD="content"
CONVERSION_API_TIMEOUT=30
CONVERSION_API_SECURE=false

# Mobile App Configuration
MOBILE_APP_IDS="com.benheath.opie.ios,com.benheath.opie.android"
MOBILE_APP_MIN_VERSION="1.0.0"

# JWT Security Configuration
JWT_AUTH_COOKIE="access_token"
JWT_AUTH_REFRESH_COOKIE="refresh_token"
JWT_AUTH_SECURE=true
JWT_AUTH_SAMESITE="Lax"

###############################
# OIDC Integration Configuration
###############################
OIDC_RP_CLIENT_ID=""
OIDC_RP_CLIENT_SECRET=""
OIDC_RP_IDP_SIGN_KEY=""
OIDC_OP_AUTHORIZATION_ENDPOINT="http://oidc.endpoint.test/authorize"
OIDC_OP_TOKEN_ENDPOINT="http://oidc.endpoint.test/token"
OIDC_OP_USER_ENDPOINT="http://oidc.endpoint.test/userinfo"
OIDC_OP_JWKS_ENDPOINT="http://oidc.endpoint.test/jwks"
OIDC_OP_LOGOUT_ENDPOINT="http://oidc.endpoint.test/logout"
OIDC_RP_REDIRECT_URI="http://localhost:8000/api/auth/oidc/callback/"

###############################
# Logging Configuration
###############################
DJANGO_LOG_LEVEL="INFO"
BH_OPIE_LOG_LEVEL="INFO"

###############################
# Production Configuration
###############################
DJANGO_CONFIGURATION="Development"
CLOUDRUN_SERVICE_URL=""
CSRF_COOKIE_SAMESITE="Lax"
CSRF_COOKIE_DOMAIN=""
REDIS_URL="redis://localhost:6379"

###############################
# Stripe Payment Keys
###############################
STRIPE_LIVE_PUBLIC_KEY="pk_live_xxx"
STRIPE_LIVE_SECRET_KEY="sk_live_xxx"
STRIPE_TEST_PUBLIC_KEY="pk_test_xxx"
STRIPE_TEST_SECRET_KEY="sk_test_xxx"
STRIPE_PRICING_TABLE_ID="prctbl_xxx"
DJSTRIPE_WEBHOOK_SECRET="whsec_xxx"

###############################
# Slack Integration
###############################
# AGNO uses SLACK_TOKEN
SLACK_TOKEN="xoxb-your-slack-token"
# Uncomment if using bot token
# SLACK_BOT_TOKEN="xoxb-your-bot-token"
SLACK_APP_TOKEN="xapp-your-app-token"
SLACK_SIGNING_SECRET="your-signing-secret"
SLACK_CLIENT_ID="your-slack-client-id"
SLACK_CLIENT_SECRET="your-slack-client-secret"

###############################
# External API Keys
###############################
OPENAI_API_KEY="sk-your-openai-key"
GOOGLE_API_KEY="AIza-your-google-api-key"

###############################
# Jira Integration (optional)
###############################
JIRA_SERVER_URL="https://your-domain.atlassian.net/"
JIRA_USERNAME="your-email@example.com"
JIRA_PASSWORD=""
JIRA_TOKEN="your-jira-api-token"

###############################
# Cloud Run
###############################
# CLOUD_RUN_BASE_URL=https://your-cloud-run-service-url
CLOUD_RUN_BASE_URL=http://localhost:8080

###############################
# CORS Settings
###############################
CORS_ALLOWED_ORIGINS="http://localhost:5173,http://127.0.0.1:5173,http://127.0.0.1:8000,http://127.0.0.1:3000,http://localhost:3000"
CORS_ALLOW_CREDENTIALS=True
CORS_ALLOW_ALL_ORIGINS=True

###############################
# Django API
###############################
DJANGO_API_URL="http://localhost:8000"
DJANGO_API_KEY="your-django-api-key"

###############################
# Agno Agent Settings
###############################
AGENT_MEMORY_TABLE="opie_memory"
AGENT_STORAGE_TABLE="opie_storage_sessions"
AGENT_SCHEMA="ai"

###############################
# Collaboration Settings
###############################
COLLABORATION_API_URL=http://localhost:4444/collaboration/api/
COLLABORATION_BACKEND_BASE_URL=http://localhost:8000
COLLABORATION_SERVER_ORIGIN=http://localhost:3000
COLLABORATION_SERVER_SECRET=my-secret
COLLABORATION_WS_URL=ws://localhost:4444/collaboration/ws/
Y_PROVIDER_API_KEY=my-secret

###############################
# Blocknote AI Settings
###############################
AI_FEATURE_ENABLED=True
# OpenAI API key for Blocknote AI (should match OPENAI_API_KEY above if shared)
AI_API_KEY="sk-your-openai-key"
# The API base URL for OpenAI
AI_BASE_URL=https://api.openai.com/v1
# The model you want to use (for GPT-3.5 or GPT-4, etc.)
AI_MODEL=gpt-3.5-turbo
# Which document reaches/roles can use AI (comma-separated: public, authenticated, restricted)
# For most setups, allow all: public,authenticated,restricted
AI_ALLOW_REACH_FROM=public,authenticated,restricted

# Email / Mailgun (optional)
# DEFAULT_FROM_EMAIL="hello@yourdomain.com"
# SERVER_EMAIL="noreply@yourdomain.com"
# EMAIL_BACKEND="anymail.backends.mailgun.EmailBackend"
# MAILGUN_API_KEY="key-xxx"
# MAILGUN_SENDER_DOMAIN="yourdomain.com"

# Mailchimp (optional)
MAILCHIMP_API_KEY=""
MAILCHIMP_LIST_ID=""

# Health Checks (optional)
HEALTH_CHECK_TOKENS=""

# Turnstile (optional - for bot protection)
TURNSTILE_KEY=""
TURNSTILE_SECRET=""

# AI Integration: Images
AI_IMAGES_OPENAI_API_KEY="sk-xxx"
AI_IMAGES_STABILITY_AI_API_KEY="sk-xxx"

# AI Integration: Chat
AI_CHAT_OPENAI_API_KEY="sk-xxx"
AI_CHAT_OPENAI_MODEL="gpt-4o"

# Agno Settings
AGENT_MEMORY_TABLE="opie_memory"
AGENT_STORAGE_TABLE="opie_storage_sessions"
AGENT_SCHEMA="ai"

# Cloud Run LlamaIndex Ingestion
CLOUD_RUN_INGEST_URL=https://your-cloud-run-service-url/ingest-file
CLOUD_RUN_BASE_URL=https://your-cloud-run-service-url

# Slack Integration
SLACK_TOKEN="xoxb-xxx"
SLACK_APP_TOKEN="xapp-xxx"
SLACK_SIGNING_SECRET="xxx"
SLACK_CLIENT_ID="xxx"
SLACK_CLIENT_SECRET="xxx"

# OpenAI API Key (Main)
OPENAI_API_KEY="sk-xxx"

# Google API Key (Gemini / YouTube / Maps / etc)
GOOGLE_API_KEY="AIza-xxx"

# Jira Integration (optional)
JIRA_SERVER_URL="https://your-domain.atlassian.net/"
JIRA_USERNAME="your-email@example.com"
JIRA_TOKEN="your-jira-api-token"

# Collaboration Settings
COLLABORATION_API_URL=http://localhost:4444/collaboration/api/
COLLABORATION_BACKEND_BASE_URL=http://localhost:8000
COLLABORATION_SERVER_ORIGIN=http://localhost:3000
COLLABORATION_SERVER_SECRET=my-secret
COLLABORATION_WS_URL=ws://localhost:4444/collaboration/ws/
Y_PROVIDER_API_KEY=my-secret

# Blocknote AI
AI_FEATURE_ENABLED=True
AI_API_KEY =
AI_BASE_URL =
AI_MODEL = 
AI_ALLOW_REACH_FROM =