# Generated by Django 5.2.7 on 2025-10-02 02:43

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('opie', '0002_initial'),
        ('teams', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='agent',
            name='user',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, related_name='agents', to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name='agentexpectedoutput',
            name='agent',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name='outputs',
                to='opie.agent',
            ),
        ),
        migrations.AddField(
            model_name='agentexpectedoutput',
            name='user',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, related_name='outputs', to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name='agent',
            name='expected_output',
            field=models.ForeignKey(
                blank=True,
                help_text='The predefined expected output template assigned to this agent.',
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='agents',
                to='opie.agentexpectedoutput',
            ),
        ),
        migrations.AddField(
            model_name='agentinstruction',
            name='user',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, related_name='instructions', to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name='agent',
            name='instructions',
            field=models.ForeignKey(
                blank=True,
                help_text='The predefined instructions assigned to this agent.',
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='agents',
                to='opie.agentinstruction',
            ),
        ),
        migrations.AddField(
            model_name='agentparameter',
            name='agent',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, related_name='parameters', to='opie.agent'
            ),
        ),
        migrations.AddField(
            model_name='agentuiproperties',
            name='agent',
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE, related_name='ui_properties', to='opie.agent'
            ),
        ),
        migrations.AddField(
            model_name='aiconversation',
            name='user',
            field=models.ForeignKey(
                help_text='User who initiated the conversation',
                on_delete=django.db.models.deletion.CASCADE,
                related_name='ai_conversations',
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name='agent',
            name='capabilities',
            field=models.ManyToManyField(blank=True, related_name='agents', to='opie.capability'),
        ),
        migrations.AddField(
            model_name='agent',
            name='category',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name='agents',
                to='opie.category',
            ),
        ),
        migrations.AddField(
            model_name='chatsession',
            name='agent',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, related_name='chat_sessions', to='opie.agent'
            ),
        ),
        migrations.AddField(
            model_name='chatsession',
            name='user',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, related_name='chat_sessions', to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name='collection',
            name='parent',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name='children',
                to='opie.collection',
            ),
        ),
        migrations.AddField(
            model_name='ephemeralfile',
            name='uploaded_by',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='ephemeral_files',
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name='file',
            name='collection',
            field=models.ForeignKey(
                blank=True,
                help_text='Collection this file belongs to.',
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='files',
                to='opie.collection',
            ),
        ),
        migrations.AddField(
            model_name='file',
            name='starred_by',
            field=models.ManyToManyField(blank=True, related_name='starred_files', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='file',
            name='team',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='files',
                to='teams.team',
            ),
        ),
        migrations.AddField(
            model_name='file',
            name='uploaded_by',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='uploaded_files',
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name='fileknowledgebaselink',
            name='file',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, related_name='knowledge_base_links', to='opie.file'
            ),
        ),
        migrations.AddField(
            model_name='file',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='files', to='opie.filetag'),
        ),
        migrations.AddField(
            model_name='knowledgebase',
            name='uploaded_by',
            field=models.ForeignKey(
                blank=True,
                help_text='User who created this knowledge base.',
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name='knowledge_bases',
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name='fileknowledgebaselink',
            name='knowledge_base',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, related_name='file_links', to='opie.knowledgebase'
            ),
        ),
        migrations.AddField(
            model_name='file',
            name='knowledge_bases',
            field=models.ManyToManyField(
                blank=True,
                help_text='Knowledge bases this file is linked to for ingestion.',
                related_name='linked_files',
                through='opie.FileKnowledgeBaseLink',
                to='opie.knowledgebase',
            ),
        ),
        migrations.AddField(
            model_name='agent',
            name='knowledge_base',
            field=models.ForeignKey(
                blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='opie.knowledgebase'
            ),
        ),
        migrations.AddField(
            model_name='knowledgebasepdfurl',
            name='kb',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, related_name='pdf_urls', to='opie.knowledgebase'
            ),
        ),
        migrations.AddField(
            model_name='knowledgebasepdfurl',
            name='uploaded_by',
            field=models.ForeignKey(
                blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name='knowledgebasepermission',
            name='created_by',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='created_kb_team_links',
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name='knowledgebasepermission',
            name='knowledge_base',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, related_name='permission_links', to='opie.knowledgebase'
            ),
        ),
        migrations.AddField(
            model_name='knowledgebasepermission',
            name='team',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name='knowledgebase_permission_links',
                to='teams.team',
            ),
        ),
        migrations.AddField(
            model_name='knowledgebase',
            name='permissions',
            field=models.ManyToManyField(
                blank=True,
                help_text='Teams with access to this knowledge base via permissions.',
                related_name='knowledge_bases',
                through='opie.KnowledgeBasePermission',
                to='teams.team',
            ),
        ),
        migrations.AddField(
            model_name='knowledgebase',
            name='model_provider',
            field=models.ForeignKey(
                help_text='LLM provider to use for embeddings in this knowledge base.',
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to='opie.modelprovider',
            ),
        ),
        migrations.AddField(
            model_name='agent',
            name='model',
            field=models.ForeignKey(
                blank=True,
                help_text='AI model used by the agent.',
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='agents',
                to='opie.modelprovider',
            ),
        ),
        migrations.AddField(
            model_name='project',
            name='members',
            field=models.ManyToManyField(
                blank=True,
                help_text='Direct users with access to this project.',
                related_name='projects',
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name='project',
            name='owner',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, related_name='owned_projects', to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name='project',
            name='shared_with_teams',
            field=models.ManyToManyField(
                blank=True,
                help_text='Teams with access to this project.',
                related_name='shared_projects',
                to='teams.team',
            ),
        ),
        migrations.AddField(
            model_name='project',
            name='starred_by',
            field=models.ManyToManyField(blank=True, related_name='starred_projects', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='project',
            name='team',
            field=models.ForeignKey(
                blank=True,
                help_text='Team this project belongs to (optional if personal).',
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name='projects',
                to='teams.team',
            ),
        ),
        migrations.AddField(
            model_name='file',
            name='vault_project',
            field=models.ForeignKey(
                blank=True,
                help_text='Vault project for this file (if any)',
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='file_vault_files',
                to='opie.project',
            ),
        ),
        migrations.AddField(
            model_name='aiconversation',
            name='project',
            field=models.ForeignKey(
                blank=True,
                help_text='Project context for the conversation',
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='ai_conversations',
                to='opie.project',
            ),
        ),
        migrations.AddField(
            model_name='projectinstruction',
            name='created_by',
            field=models.ForeignKey(
                help_text='User who created this instruction',
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='created_project_instructions',
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name='project',
            name='instruction',
            field=models.ForeignKey(
                blank=True,
                help_text="Custom instruction template for this project's AI operations",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='projects',
                to='opie.projectinstruction',
            ),
        ),
        migrations.AddField(
            model_name='storagebucket',
            name='team',
            field=models.ForeignKey(
                blank=True,
                help_text='Optional team. System buckets have no team.',
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to='teams.team',
                verbose_name='Team',
            ),
        ),
        migrations.AddField(
            model_name='file',
            name='storage_bucket',
            field=models.ForeignKey(
                help_text='Storage bucket where this file is stored',
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to='opie.storagebucket',
            ),
        ),
        migrations.AddField(
            model_name='project',
            name='tags',
            field=models.ManyToManyField(blank=True, to='opie.tag'),
        ),
        migrations.AddField(
            model_name='teamproject',
            name='starred_by',
            field=models.ManyToManyField(blank=True, related_name='starred_team_projects', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='teamproject',
            name='tags',
            field=models.ManyToManyField(blank=True, to='opie.tag'),
        ),
        migrations.AddField(
            model_name='teamproject',
            name='team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teams.team', verbose_name='Team'),
        ),
        migrations.AddField(
            model_name='teamtokensummary',
            name='team',
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE, related_name='token_summary', to='teams.team'
            ),
        ),
        migrations.AddField(
            model_name='teamtoolcredential',
            name='agent',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name='team_tool_credentials',
                to='opie.agent',
            ),
        ),
        migrations.AddField(
            model_name='teamtoolcredential',
            name='team',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, related_name='tool_credentials', to='teams.team'
            ),
        ),
        migrations.AddField(
            model_name='tokenusage',
            name='team',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='token_usages',
                to='teams.team',
            ),
        ),
        migrations.AddField(
            model_name='tokenusage',
            name='user',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='token_usages',
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name='teamtoolcredential',
            name='tool',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, related_name='team_credentials', to='opie.tool'
            ),
        ),
        migrations.AddField(
            model_name='userfeedback',
            name='session',
            field=models.ForeignKey(
                help_text='Related chat session.',
                on_delete=django.db.models.deletion.CASCADE,
                related_name='feedbacks',
                to='opie.chatsession',
            ),
        ),
        migrations.AddField(
            model_name='userfeedback',
            name='user',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='feedbacks',
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name='usertokensummary',
            name='user',
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE, related_name='token_summary', to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name='usertoolcredential',
            name='agent',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name='user_tool_credentials',
                to='opie.agent',
            ),
        ),
        migrations.AddField(
            model_name='usertoolcredential',
            name='tool',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, related_name='user_credentials', to='opie.tool'
            ),
        ),
        migrations.AddField(
            model_name='usertoolcredential',
            name='user',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name='tool_credentials',
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name='vaultfile',
            name='project',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='vault_files',
                to='opie.project',
            ),
        ),
        migrations.AddField(
            model_name='vaultfile',
            name='shared_with_teams',
            field=models.ManyToManyField(blank=True, related_name='shared_team_vault_files', to='teams.team'),
        ),
        migrations.AddField(
            model_name='vaultfile',
            name='shared_with_users',
            field=models.ManyToManyField(blank=True, related_name='shared_vault_files', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='vaultfile',
            name='team',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='vault_files',
                to='teams.team',
            ),
        ),
        migrations.AddField(
            model_name='vaultfile',
            name='uploaded_by',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, related_name='vault_files', to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name='aiprocessingqueue',
            name='vault_file',
            field=models.ForeignKey(
                help_text='File to process',
                on_delete=django.db.models.deletion.CASCADE,
                related_name='ai_processing_queue',
                to='opie.vaultfile',
            ),
        ),
        migrations.AddField(
            model_name='vaultfileinsight',
            name='vault_file',
            field=models.OneToOneField(
                help_text='The vault file this insight belongs to',
                on_delete=django.db.models.deletion.CASCADE,
                related_name='ai_insight',
                to='opie.vaultfile',
            ),
        ),
        migrations.AddField(
            model_name='website',
            name='owner',
            field=models.ForeignKey(
                help_text='User who added this website.',
                on_delete=django.db.models.deletion.CASCADE,
                related_name='owned_websites',
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name='website',
            name='tags',
            field=models.ManyToManyField(blank=True, help_text='Optional tags for organizing websites.', to='opie.tag'),
        ),
        migrations.AlterUniqueTogether(
            name='agentparameter',
            unique_together={('agent', 'key')},
        ),
        migrations.AddIndex(
            model_name='chatsession',
            index=models.Index(fields=['-updated_at'], name='opie_chatse_updated_e410a6_idx'),
        ),
        migrations.AddIndex(
            model_name='chatsession',
            index=models.Index(fields=['user', 'agent'], name='opie_chatse_user_id_69a521_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='collection',
            unique_together={('name', 'parent')},
        ),
        migrations.AddIndex(
            model_name='ephemeralfile',
            index=models.Index(fields=['session_id'], name='opie_epheme_session_2a39c0_idx'),
        ),
        migrations.AddIndex(
            model_name='fileknowledgebaselink',
            index=models.Index(fields=['file', 'knowledge_base'], name='opie_filekn_file_id_e4abed_idx'),
        ),
        migrations.AddIndex(
            model_name='fileknowledgebaselink',
            index=models.Index(fields=['ingestion_status'], name='opie_filekn_ingesti_3149c7_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='fileknowledgebaselink',
            unique_together={('file', 'knowledge_base')},
        ),
        migrations.AlterUniqueTogether(
            name='knowledgebasepdfurl',
            unique_together={('kb', 'url')},
        ),
        migrations.AlterUniqueTogether(
            name='knowledgebasepermission',
            unique_together={('knowledge_base', 'team')},
        ),
        migrations.AddIndex(
            model_name='aiconversation',
            index=models.Index(fields=['user', 'project'], name='opie_aiconv_user_id_216987_idx'),
        ),
        migrations.AddIndex(
            model_name='aiconversation',
            index=models.Index(fields=['created_at'], name='opie_aiconv_created_0e3608_idx'),
        ),
        migrations.AddIndex(
            model_name='projectinstruction',
            index=models.Index(fields=['instruction_type', 'is_active'], name='opie_projec_instruc_5ce8a7_idx'),
        ),
        migrations.AddIndex(
            model_name='projectinstruction',
            index=models.Index(fields=['created_by'], name='opie_projec_created_520aef_idx'),
        ),
        migrations.AddIndex(
            model_name='storagebucket',
            index=models.Index(fields=['team', 'is_system'], name='opie_stor_team_id_1e43c2_idx'),
        ),
        migrations.AddIndex(
            model_name='storagebucket',
            index=models.Index(fields=['bucket_name'], name='opie_stor_bucket__53379e_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='storagebucket',
            unique_together={('team', 'bucket_name')},
        ),
        migrations.AddIndex(
            model_name='file',
            index=models.Index(fields=['-created_at'], name='opie_file_created_e3e608_idx'),
        ),
        migrations.AddIndex(
            model_name='file',
            index=models.Index(fields=['uploaded_by', 'file_type'], name='opie_file_uploade_936197_idx'),
        ),
        migrations.AddIndex(
            model_name='file',
            index=models.Index(fields=['team', 'file_type'], name='opie_file_team_id_83450d_idx'),
        ),
        migrations.AddIndex(
            model_name='file',
            index=models.Index(fields=['storage_bucket', 'storage_path'], name='opie_file_storage_70a53a_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='teamtoolcredential',
            unique_together={('team', 'tool', 'agent')},
        ),
        migrations.AlterUniqueTogether(
            name='usertoolcredential',
            unique_together={('user', 'tool', 'agent')},
        ),
        migrations.AddIndex(
            model_name='aiprocessingqueue',
            index=models.Index(fields=['status', 'priority'], name='opie_aiproc_status_220e6b_idx'),
        ),
        migrations.AddIndex(
            model_name='aiprocessingqueue',
            index=models.Index(fields=['vault_file', 'status'], name='opie_aiproc_vault_f_b90de9_idx'),
        ),
        migrations.AddIndex(
            model_name='vaultfileinsight',
            index=models.Index(fields=['processing_status'], name='opie_vaultf_process_e2e44e_idx'),
        ),
        migrations.AddIndex(
            model_name='vaultfileinsight',
            index=models.Index(fields=['vault_file', 'processing_status'], name='opie_vaultf_vault_f_55f28b_idx'),
        ),
    ]
