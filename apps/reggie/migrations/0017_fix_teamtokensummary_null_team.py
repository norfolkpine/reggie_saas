
# Generated by Django 5.2.2 on 2025-09-26 08:34

from django.db import migrations
from django.utils import timezone


def fix_null_team_ids(apps, schema_editor):
    """
    Fix TeamTokenSummary records that have null team_id values and UserTokenSummary records with null period_end.
    We'll assign them to the first available team or delete them if no teams exist.
    """
    TeamTokenSummary = apps.get_model('reggie', 'TeamTokenSummary')
    UserTokenSummary = apps.get_model('reggie', 'UserTokenSummary')
    Team = apps.get_model('teams', 'Team')
    
    # Fix TeamTokenSummary records with null team_id
    # These records shouldn't exist since TeamTokenSummary should only be created when team is not None
    null_team_records = TeamTokenSummary.objects.filter(team_id__isnull=True)
    
    if null_team_records.exists():
        print(f"Deleting {null_team_records.count()} orphaned TeamTokenSummary records (team_id is null)")
        null_team_records.delete()
    
    # Fix UserTokenSummary records with null period_end
    null_period_end_records = UserTokenSummary.objects.filter(period_end__isnull=True)
    
    if null_period_end_records.exists():
        # Set period_end to the end of the current month
        today = timezone.now().date()
        end_of_month = today.replace(day=1) + timezone.timedelta(days=32)
        end_of_month = end_of_month.replace(day=1) - timezone.timedelta(days=1)
        
        print(f"Setting period_end to {end_of_month} for {null_period_end_records.count()} UserTokenSummary records")
        null_period_end_records.update(period_end=end_of_month)


def reverse_fix_null_team_ids(apps, schema_editor):
    """
    Reverse migration - this is a no-op since we can't restore the original state
    """
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('reggie', '0015_updatefiledtype'),
        ('teams', '0002_add_djstripe_fields'),
    ]

    operations = [
        migrations.RunPython(fix_null_team_ids, reverse_fix_null_team_ids),
    ]
