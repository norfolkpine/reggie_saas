# Generated by Django 5.1.5 on 2025-05-11 15:02

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('reggie', '0002_initial'),
        ('teams', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='agent',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='agents', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='agentexpectedoutput',
            name='agent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='outputs', to='reggie.agent'),
        ),
        migrations.AddField(
            model_name='agentexpectedoutput',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='outputs', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='agent',
            name='expected_output',
            field=models.ForeignKey(blank=True, help_text='The predefined expected output template assigned to this agent.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='agents', to='reggie.agentexpectedoutput'),
        ),
        migrations.AddField(
            model_name='agentinstruction',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='instructions', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='agent',
            name='instructions',
            field=models.ForeignKey(blank=True, help_text='The predefined instructions assigned to this agent.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='agents', to='reggie.agentinstruction'),
        ),
        migrations.AddField(
            model_name='agentparameter',
            name='agent',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parameters', to='reggie.agent'),
        ),
        migrations.AddField(
            model_name='agentuiproperties',
            name='agent',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='ui_properties', to='reggie.agent'),
        ),
        migrations.AddField(
            model_name='agent',
            name='capabilities',
            field=models.ManyToManyField(blank=True, related_name='agents', to='reggie.capability'),
        ),
        migrations.AddField(
            model_name='agent',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='agents', to='reggie.category'),
        ),
        migrations.AddField(
            model_name='chatsession',
            name='agent',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chat_sessions', to='reggie.agent'),
        ),
        migrations.AddField(
            model_name='chatsession',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chat_sessions', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='file',
            name='starred_by',
            field=models.ManyToManyField(blank=True, related_name='starred_files', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='file',
            name='team',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='files', to='teams.team'),
        ),
        migrations.AddField(
            model_name='file',
            name='uploaded_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='uploaded_files', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='fileknowledgebaselink',
            name='file',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='knowledge_base_links', to='reggie.file'),
        ),
        migrations.AddField(
            model_name='file',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='files', to='reggie.filetag'),
        ),
        migrations.AddField(
            model_name='fileknowledgebaselink',
            name='knowledge_base',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='file_links', to='reggie.knowledgebase'),
        ),
        migrations.AddField(
            model_name='file',
            name='knowledge_bases',
            field=models.ManyToManyField(blank=True, help_text='Knowledge bases this file is linked to for ingestion.', related_name='linked_files', through='reggie.FileKnowledgeBaseLink', to='reggie.knowledgebase'),
        ),
        migrations.AddField(
            model_name='agent',
            name='knowledge_base',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='reggie.knowledgebase'),
        ),
        migrations.AddField(
            model_name='knowledgebasepdfurl',
            name='kb',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pdf_urls', to='reggie.knowledgebase'),
        ),
        migrations.AddField(
            model_name='knowledgebasepdfurl',
            name='uploaded_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='knowledgebase',
            name='model_provider',
            field=models.ForeignKey(help_text='LLM provider to use for embeddings in this knowledge base.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='reggie.modelprovider'),
        ),
        migrations.AddField(
            model_name='agent',
            name='model',
            field=models.ForeignKey(blank=True, help_text='AI model used by the agent.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='agents', to='reggie.modelprovider'),
        ),
        migrations.AddField(
            model_name='project',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owned_projects', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='project',
            name='starred_by',
            field=models.ManyToManyField(blank=True, related_name='starred_projects', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='project',
            name='team',
            field=models.ForeignKey(blank=True, help_text='Team this project belongs to (optional if personal).', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='projects', to='teams.team'),
        ),
        migrations.AddField(
            model_name='storagebucket',
            name='team',
            field=models.ForeignKey(blank=True, help_text='Optional team. System buckets have no team.', null=True, on_delete=django.db.models.deletion.CASCADE, to='teams.team', verbose_name='Team'),
        ),
        migrations.AddField(
            model_name='file',
            name='storage_bucket',
            field=models.ForeignKey(help_text='Storage bucket where this file is stored', null=True, on_delete=django.db.models.deletion.SET_NULL, to='reggie.storagebucket'),
        ),
        migrations.AddField(
            model_name='project',
            name='tags',
            field=models.ManyToManyField(blank=True, to='reggie.tag'),
        ),
        migrations.AddField(
            model_name='teamproject',
            name='starred_by',
            field=models.ManyToManyField(blank=True, related_name='starred_team_projects', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='teamproject',
            name='tags',
            field=models.ManyToManyField(blank=True, to='reggie.tag'),
        ),
        migrations.AddField(
            model_name='teamproject',
            name='team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teams.team', verbose_name='Team'),
        ),
        migrations.AddField(
            model_name='teamtoolcredential',
            name='agent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='team_tool_credentials', to='reggie.agent'),
        ),
        migrations.AddField(
            model_name='teamtoolcredential',
            name='team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tool_credentials', to='teams.team'),
        ),
        migrations.AddField(
            model_name='teamtoolcredential',
            name='tool',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_credentials', to='reggie.tool'),
        ),
        migrations.AddField(
            model_name='usertoolcredential',
            name='agent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_tool_credentials', to='reggie.agent'),
        ),
        migrations.AddField(
            model_name='usertoolcredential',
            name='tool',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_credentials', to='reggie.tool'),
        ),
        migrations.AddField(
            model_name='usertoolcredential',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tool_credentials', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='website',
            name='owner',
            field=models.ForeignKey(help_text='User who added this website.', on_delete=django.db.models.deletion.CASCADE, related_name='owned_websites', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='website',
            name='tags',
            field=models.ManyToManyField(blank=True, help_text='Optional tags for organizing websites.', to='reggie.tag'),
        ),
        migrations.AlterUniqueTogether(
            name='agentparameter',
            unique_together={('agent', 'key')},
        ),
        migrations.AddIndex(
            model_name='chatsession',
            index=models.Index(fields=['-updated_at'], name='reggie_chat_updated_6ab6e4_idx'),
        ),
        migrations.AddIndex(
            model_name='chatsession',
            index=models.Index(fields=['user', 'agent'], name='reggie_chat_user_id_ce7ea0_idx'),
        ),
        migrations.AddIndex(
            model_name='fileknowledgebaselink',
            index=models.Index(fields=['file', 'knowledge_base'], name='reggie_file_file_id_258195_idx'),
        ),
        migrations.AddIndex(
            model_name='fileknowledgebaselink',
            index=models.Index(fields=['ingestion_status'], name='reggie_file_ingesti_7c59e7_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='fileknowledgebaselink',
            unique_together={('file', 'knowledge_base')},
        ),
        migrations.AlterUniqueTogether(
            name='knowledgebasepdfurl',
            unique_together={('kb', 'url')},
        ),
        migrations.AddIndex(
            model_name='storagebucket',
            index=models.Index(fields=['team', 'is_system'], name='reggie_stor_team_id_1e43c2_idx'),
        ),
        migrations.AddIndex(
            model_name='storagebucket',
            index=models.Index(fields=['bucket_name'], name='reggie_stor_bucket__53379e_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='storagebucket',
            unique_together={('team', 'bucket_name')},
        ),
        migrations.AddIndex(
            model_name='file',
            index=models.Index(fields=['-created_at'], name='reggie_file_created_9d5526_idx'),
        ),
        migrations.AddIndex(
            model_name='file',
            index=models.Index(fields=['uploaded_by', 'file_type'], name='reggie_file_uploade_57fd0f_idx'),
        ),
        migrations.AddIndex(
            model_name='file',
            index=models.Index(fields=['team', 'file_type'], name='reggie_file_team_id_5e0f53_idx'),
        ),
        migrations.AddIndex(
            model_name='file',
            index=models.Index(fields=['storage_bucket', 'storage_path'], name='reggie_file_storage_dbdc04_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='teamtoolcredential',
            unique_together={('team', 'tool', 'agent')},
        ),
        migrations.AlterUniqueTogether(
            name='usertoolcredential',
            unique_together={('user', 'tool', 'agent')},
        ),
    ]
