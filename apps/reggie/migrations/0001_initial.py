# Generated by Django 5.1.5 on 2025-03-11 12:53

import apps.reggie.models
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('djstripe', '0012_2_8'),
        ('teams', '0003_team_billing_details_last_changed_team_customer_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DocumentTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='KnowledgeBase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('knowledge_type', models.CharField(choices=[('arxiv', 'ArXiv Papers'), ('combined', 'Combined Knowledge Base'), ('csv', 'CSV Files'), ('document', 'Document Files (DOCX)'), ('json', 'JSON Files'), ('langchain', 'LangChain Retriever'), ('pdf', 'Local PDF Files'), ('pdf_url', 'PDF Files from URLs'), ('s3_pdf', 'PDF Files from S3'), ('s3_text', 'Text Files from S3'), ('text', 'Local Text Files'), ('website', 'Website Data'), ('wikipedia', 'Wikipedia Articles'), ('other', 'Other Knowledge Type')], default='pdf', help_text='Defines how this knowledge base is structured (e.g., PDFs, SQL, API, etc.).', max_length=20)),
                ('path', models.CharField(blank=True, help_text='Path for files or storage location (e.g., local dir, URL, S3 bucket).', max_length=500, null=True)),
                ('vector_table_name', models.CharField(help_text='Vector database table name for embeddings.', max_length=255, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the knowledge base was created.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the knowledge base was last updated.')),
            ],
        ),
        migrations.CreateModel(
            name='StorageBucket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Name of the storage bucket (e.g., 'Main Tax Docs')", max_length=255, unique=True)),
                ('provider', models.CharField(choices=[('local', 'Local Storage'), ('aws_s3', 'Amazon S3'), ('gcs', 'Google Cloud Storage')], default='local', help_text='Storage provider (Local, AWS S3, or Google Cloud Storage).', max_length=10)),
                ('bucket_url', models.CharField(help_text="Full storage bucket URL (e.g., 's3://my-bucket/', 'gcs://my-bucket/', or local path)", max_length=500, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Agent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('search_knowledge', models.BooleanField(default=True)),
                ('add_datetime_to_instructions', models.BooleanField(default=True)),
                ('show_tool_calls', models.BooleanField(default=False)),
                ('markdown_enabled', models.BooleanField(default=True)),
                ('is_global', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('subscriptions', models.ManyToManyField(blank=True, related_name='agents', to='djstripe.subscription')),
                ('team', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='agents', to='teams.team')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='agents', to=settings.AUTH_USER_MODEL)),
                ('knowledge_base', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='reggie.knowledgebase')),
            ],
        ),
        migrations.CreateModel(
            name='AgentInstruction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('instruction', models.TextField()),
                ('category', models.CharField(choices=[('Scope & Knowledge Boundaries', 'Scope & Knowledge Boundaries'), ('Information Retrieval & Accuracy', 'Information Retrieval & Accuracy'), ('Response Handling & Formatting', 'Response Handling & Formatting'), ('Compliance-Specific Instructions', 'Compliance-Specific Instructions'), ('Personality', 'Personality'), ('Process', 'Process'), ('Improvement', 'Improvement')], default='Process', max_length=50)),
                ('is_enabled', models.BooleanField(default=True)),
                ('is_global', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('agent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='instructions', to='reggie.agent')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='instructions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('file', models.FileField(upload_to=apps.reggie.models.user_document_path)),
                ('visibility', models.CharField(choices=[('public', 'Public'), ('private', 'Private')], default='private', max_length=10)),
                ('is_global', models.BooleanField(default=False, help_text='Global public library document.')),
                ('source', models.CharField(blank=True, max_length=255, null=True)),
                ('starred_by', models.ManyToManyField(blank=True, related_name='starred_documents', to=settings.AUTH_USER_MODEL)),
                ('team', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='documents', to='teams.team')),
                ('uploaded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='uploaded_documents', to=settings.AUTH_USER_MODEL)),
                ('tags', models.ManyToManyField(blank=True, related_name='documents', to='reggie.documenttag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owned_projects', to=settings.AUTH_USER_MODEL)),
                ('starred_by', models.ManyToManyField(blank=True, related_name='starred_projects', to=settings.AUTH_USER_MODEL)),
                ('team', models.ForeignKey(blank=True, help_text='Team this project belongs to (optional if personal).', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='projects', to='teams.team')),
                ('tags', models.ManyToManyField(blank=True, to='reggie.tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AgentParameter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=255)),
                ('value', models.TextField()),
                ('agent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parameters', to='reggie.agent')),
            ],
            options={
                'unique_together': {('agent', 'key')},
            },
        ),
    ]
