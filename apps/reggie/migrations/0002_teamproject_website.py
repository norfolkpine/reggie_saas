# Generated by Django 5.1.5 on 2025-03-18 06:13

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('reggie', '0001_initial'),
        ('teams', '0003_team_billing_details_last_changed_team_customer_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='TeamProject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('starred_by', models.ManyToManyField(blank=True, related_name='starred_team_projects', to=settings.AUTH_USER_MODEL)),
                ('tags', models.ManyToManyField(blank=True, to='reggie.tag')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teams.team', verbose_name='Team')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Website',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('url', models.URLField(help_text='The website URL to be crawled.', max_length=500, unique=True)),
                ('name', models.CharField(blank=True, help_text='Optional name or label for the website.', max_length=255, null=True)),
                ('description', models.TextField(blank=True, help_text='Optional description of the website.', null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Whether this website is active and should be crawled.')),
                ('last_crawled', models.DateTimeField(blank=True, help_text='Last time this website was crawled.', null=True)),
                ('crawl_status', models.CharField(choices=[('pending', 'Pending'), ('crawling', 'Crawling'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', help_text='Current crawling status.', max_length=50)),
                ('owner', models.ForeignKey(help_text='User who added this website.', on_delete=django.db.models.deletion.CASCADE, related_name='owned_websites', to=settings.AUTH_USER_MODEL)),
                ('tags', models.ManyToManyField(blank=True, help_text='Optional tags for organizing websites.', to='reggie.tag')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
    ]
