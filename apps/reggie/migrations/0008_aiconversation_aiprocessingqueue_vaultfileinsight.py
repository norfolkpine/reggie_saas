# Generated by Django 5.2.2 on 2025-09-10 15:37

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('reggie', '0007_make_vaultfile_file_nullable'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AiConversation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('folder_id', models.BigIntegerField(default=0, help_text='Folder ID for folder-level conversations (0 for root)')),
                ('question', models.TextField(help_text="User's question or prompt")),
                ('response', models.TextField(help_text="AI's response")),
                ('context_files', models.JSONField(blank=True, default=list, help_text='List of file IDs used as context for this conversation')),
                ('tokens_used', models.IntegerField(default=0, help_text='Number of tokens used for this conversation')),
                ('ai_model_used', models.CharField(blank=True, help_text='AI model used for this conversation', max_length=100)),
                ('response_time_ms', models.IntegerField(default=0, help_text='Response time in milliseconds')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('project', models.ForeignKey(blank=True, help_text='Project context for the conversation', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ai_conversations', to='reggie.project')),
                ('user', models.ForeignKey(help_text='User who initiated the conversation', on_delete=django.db.models.deletion.CASCADE, related_name='ai_conversations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'AI Conversation',
                'verbose_name_plural': 'AI Conversations',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user', 'project'], name='reggie_aico_user_id_f97bc3_idx'), models.Index(fields=['created_at'], name='reggie_aico_created_7e8aa4_idx')],
            },
        ),
        migrations.CreateModel(
            name='AiProcessingQueue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('priority', models.IntegerField(default=5, help_text='Processing priority (1=highest, 10=lowest)')),
                ('status', models.CharField(choices=[('queued', 'Queued'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], default='queued', max_length=20)),
                ('retry_count', models.IntegerField(default=0, help_text='Number of retry attempts')),
                ('error_message', models.TextField(blank=True, help_text='Error message if processing failed')),
                ('scheduled_at', models.DateTimeField(auto_now_add=True, help_text='When the task was scheduled')),
                ('processed_at', models.DateTimeField(blank=True, help_text='When the task was processed', null=True)),
                ('vault_file', models.ForeignKey(help_text='File to process', on_delete=django.db.models.deletion.CASCADE, related_name='ai_processing_queue', to='reggie.vaultfile')),
            ],
            options={
                'verbose_name': 'AI Processing Queue',
                'verbose_name_plural': 'AI Processing Queue Items',
                'ordering': ['priority', 'scheduled_at'],
                'indexes': [models.Index(fields=['status', 'priority'], name='reggie_aipr_status_f8c318_idx'), models.Index(fields=['vault_file', 'status'], name='reggie_aipr_vault_f_1bb5ba_idx')],
            },
        ),
        migrations.CreateModel(
            name='VaultFileInsight',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('summary', models.TextField(blank=True, help_text='AI-generated summary of the file content')),
                ('key_points', models.JSONField(blank=True, default=list, help_text='List of key points extracted from the file')),
                ('extracted_entities', models.JSONField(blank=True, default=dict, help_text='Named entities extracted (people, places, dates, etc.)')),
                ('tags', models.JSONField(blank=True, default=list, help_text='AI-generated tags for categorization')),
                ('file_type_category', models.CharField(blank=True, help_text='AI-determined file category (contract, report, etc.)', max_length=100)),
                ('processing_status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', help_text='Current processing status of AI insights', max_length=20)),
                ('ai_model_used', models.CharField(blank=True, help_text='AI model used for generating insights', max_length=100)),
                ('tokens_used', models.IntegerField(default=0, help_text='Number of tokens used for processing')),
                ('confidence_score', models.FloatField(default=0.0, help_text='Confidence score of the AI insights (0-1)')),
                ('processed_at', models.DateTimeField(blank=True, help_text='When the insights were generated', null=True)),
                ('error_message', models.TextField(blank=True, help_text='Error message if processing failed')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('vault_file', models.OneToOneField(help_text='The vault file this insight belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='ai_insight', to='reggie.vaultfile')),
            ],
            options={
                'verbose_name': 'Vault File Insight',
                'verbose_name_plural': 'Vault File Insights',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['processing_status'], name='reggie_vaul_process_5de03e_idx'), models.Index(fields=['vault_file', 'processing_status'], name='reggie_vaul_vault_f_abc648_idx')],
            },
        ),
    ]
