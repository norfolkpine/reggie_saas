version: '3.8'

services:
  # --- Postgres + pgvector database ---
  #pgvector:
  #  image: agnohq/pgvector:16
  #  restart: unless-stopped
  #  environment:
  #    - POSTGRES_DB=${POSTGRES_DB:-bh_reggie}
  #    - POSTGRES_USER=${POSTGRES_USER:-postgres}
  #    - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
  #  ports:
  #    - "5432:5432"
  #  volumes:
  #    - pgvector_data:/var/lib/postgresql/data/
  #  healthcheck:
  #    test: pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}
  #    interval: 2s
  #    retries: 10

  # --- Redis ---
  redis:
    image: redis:latest
    restart: unless-stopped
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: bash -c 'exec 6<>/dev/tcp/redis/6379'
      interval: 2s
      retries: 10

  # --- Web app ---
  web:
    image: gcr.io/${PROJECT_ID}/${IMAGE_NAME_WEB}:latest
    container_name: reggie-web
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "80:80"

  # --- y-provider ---
  y-provider:
    image: gcr.io/${PROJECT_ID}/${IMAGE_NAME_Y_PROVIDER}:latest
    container_name: y-provider
    restart: unless-stopped
    env_file:
      - .env.y-provider
    ports:
      - "4444:4444"
    user: "${DOCKER_USER:-1000:1000}"
    depends_on:
      - web
      - redis

  # --- Llamaindex ingester ---
  #llamaindex:
  #  build:
  #    context: ./cloudrun/bh-reggie-llamaindex-main
  #    dockerfile: Dockerfile
  #  container_name: bh-reggie-llamaindex
  #  restart: unless-stopped
  #  env_file:
  #    - .env
  #  environment:
  #    - PYTHONUNBUFFERED=1
  #    - DEBUG=${DEBUG}
  #    - USE_GCS_MEDIA=${USE_GCS_MEDIA}
  #    - GS_PROJECT_ID=${GCS_PROJECT_ID}
  #    - GOOGLE_APPLICATION_CREDENTIALS=${GCS_SERVICE_ACCOUNT_FILE}
  #    - GCS_BUCKET_NAME=${GCS_BUCKET_NAME}
  #    - GCS_PREFIX=${GCS_PREFIX}
  #    - POSTGRES_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@pgvector:5432/${POSTGRES_DB}
  #    - PGVECTOR_TABLE=${PGVECTOR_TABLE}
  #    - PGVECTOR_SCHEMA=${PGVECTOR_SCHEMA}
  #    - OPENAI_API_KEY=${OPENAI_API_KEY}
  #    - DJANGO_API_URL=http://django:8000
  #    - DJANGO_API_KEY=${DJANGO_API_KEY}
  #  ports:
  #    - "8080:8080"
  #  depends_on:
  #    - pgvector
  #    - django

  # --- Yjs (optional, if you have a Yjs server) ---
  # yjs:
  #   image: your-yjs-image:latest
  #   restart: unless-stopped
  #   environment:
  #     - ...
  #   ports:
  #     - "1234:1234"
  #   depends_on:
  #     - redis

volumes:
  pgvector_data:
  redis_data:
