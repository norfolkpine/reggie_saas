/* tslint:disable */
/* eslint-disable */
/**
 * Ben Heath SaaS
 * BH Blockchain Analytics Platform
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Price } from './Price';
import {
    PriceFromJSON,
    PriceFromJSONTyped,
    PriceToJSON,
    PriceToJSONTyped,
} from './Price';

/**
 * 
 * @export
 * @interface SubscriptionItem
 */
export interface SubscriptionItem {
    /**
     * 
     * @type {string}
     * @memberof SubscriptionItem
     */
    id: string;
    /**
     * 
     * @type {Price}
     * @memberof SubscriptionItem
     */
    price: Price;
    /**
     * The quantity of the plan to which the customer should be subscribed.
     * @type {number}
     * @memberof SubscriptionItem
     */
    quantity?: number | null;
}

/**
 * Check if a given object implements the SubscriptionItem interface.
 */
export function instanceOfSubscriptionItem(value: object): value is SubscriptionItem {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('price' in value) || value['price'] === undefined) return false;
    return true;
}

export function SubscriptionItemFromJSON(json: any): SubscriptionItem {
    return SubscriptionItemFromJSONTyped(json, false);
}

export function SubscriptionItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): SubscriptionItem {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'price': PriceFromJSON(json['price']),
        'quantity': json['quantity'] == null ? undefined : json['quantity'],
    };
}

  export function SubscriptionItemToJSON(json: any): SubscriptionItem {
      return SubscriptionItemToJSONTyped(json, false);
  }

  export function SubscriptionItemToJSONTyped(value?: SubscriptionItem | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'price': PriceToJSON(value['price']),
        'quantity': value['quantity'],
    };
}

