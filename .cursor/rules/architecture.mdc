---
description: Overall project architecture
globs: 
alwaysApply: true
---
## Architecture

- This is a Django project built on Python 3.12.
- User authentication uses `django-allauth`.
- The front end is mostly standard Django views and templates.
- The front end also uses React for dynamic user interfaces and interactions.
- React components are built using TypeScript and communicate with Django via a REST API.
- JavaScript files are kept in the `/assets/` folder and built by webpack.
  JavaScript code is typically loaded via the static files framework inside Django templates.
- There is also a standalone React front end in the `/frontend/` folder, which uses its own Vite build.
- APIs use Django Rest Framework, and JavaScript code that interacts with APIs uses an
  auto-generated OpenAPI-schema-baesd client.
- The front end uses Tailwind (Version 4) and DaisyUI.
- The main database is Postgres.
- Celery is used for background jobs and scheduled tasks.
- Redis is used as the default cache, and the message broker for Celery (if enabled).
