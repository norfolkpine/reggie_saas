/* tslint:disable */
/* eslint-disable */
/**
 * Ben Heath SaaS
 * BH Crypto
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface OpenInvitation
 */
export interface OpenInvitation {
    /**
     * 
     * @type {number}
     * @memberof OpenInvitation
     */
    readonly id: number;
    /**
     * 
     * @type {string}
     * @memberof OpenInvitation
     */
    readonly teamName: string;
    /**
     * 
     * @type {string}
     * @memberof OpenInvitation
     */
    readonly email: string;
    /**
     * 
     * @type {boolean}
     * @memberof OpenInvitation
     */
    readonly verified: boolean;
}

/**
 * Check if a given object implements the OpenInvitation interface.
 */
export function instanceOfOpenInvitation(value: object): value is OpenInvitation {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('teamName' in value) || value['teamName'] === undefined) return false;
    if (!('email' in value) || value['email'] === undefined) return false;
    if (!('verified' in value) || value['verified'] === undefined) return false;
    return true;
}

export function OpenInvitationFromJSON(json: any): OpenInvitation {
    return OpenInvitationFromJSONTyped(json, false);
}

export function OpenInvitationFromJSONTyped(json: any, ignoreDiscriminator: boolean): OpenInvitation {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'teamName': json['team_name'],
        'email': json['email'],
        'verified': json['verified'],
    };
}

  export function OpenInvitationToJSON(json: any): OpenInvitation {
      return OpenInvitationToJSONTyped(json, false);
  }

  export function OpenInvitationToJSONTyped(value?: Omit<OpenInvitation, 'id'|'team_name'|'email'|'verified'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
    };
}

