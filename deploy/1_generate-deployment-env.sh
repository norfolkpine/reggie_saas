#!/bin/bash
# Generate deployment.env from Terraform outputs
# Usage: ./deploy/generate-deployment-env.sh

set -euo pipefail

TERRAFORM_DIR="infra/envs/prod"
DEPLOYMENT_ENV="../deploy/deployment.env"

echo "Generating deployment.env from Terraform outputs..."

# Change to terraform directory
cd "$TERRAFORM_DIR"

# Get Terraform outputs in JSON format
terraform output -json deployment_vars > /tmp/deployment_vars.json

# Convert JSON to environment file format
jq -r 'to_entries[] | "\(.key)=\(.value)"' /tmp/deployment_vars.json > "$DEPLOYMENT_ENV"

# Add header comment
echo "# Generated from Terraform outputs - DO NOT EDIT MANUALLY" > "$DEPLOYMENT_ENV.tmp"
echo "# Generated on: $(date)" >> "$DEPLOYMENT_ENV.tmp"
echo "" >> "$DEPLOYMENT_ENV.tmp"
cat "$DEPLOYMENT_ENV" >> "$DEPLOYMENT_ENV.tmp"
mv "$DEPLOYMENT_ENV.tmp" "$DEPLOYMENT_ENV"

# Add service account emails (these are generated by Terraform)
echo "" >> "$DEPLOYMENT_ENV"
echo "# Service Accounts (generated by Terraform)" >> "$DEPLOYMENT_ENV"
echo "CLOUD_RUN_SA=cloud-run-test@$(jq -r '.PROJECT_ID' /tmp/deployment_vars.json).iam.gserviceaccount.com" >> "$DEPLOYMENT_ENV"
echo "GITHUB_ACTIONS_SA=github-actions-test@$(jq -r '.PROJECT_ID' /tmp/deployment_vars.json).iam.gserviceaccount.com" >> "$DEPLOYMENT_ENV"
echo "STORAGE_SA=bh-opie-storage@$(jq -r '.PROJECT_ID' /tmp/deployment_vars.json).iam.gserviceaccount.com" >> "$DEPLOYMENT_ENV"
echo "SQL_BACKUP_SA=sql-backup@$(jq -r '.PROJECT_ID' /tmp/deployment_vars.json).iam.gserviceaccount.com" >> "$DEPLOYMENT_ENV"
echo "CLOUD_STORAGE_BACKUP_SA=cloud-storage-backup@$(jq -r '.PROJECT_ID' /tmp/deployment_vars.json).iam.gserviceaccount.com" >> "$DEPLOYMENT_ENV"

# Add Cloud Run specific variables
echo "" >> "$DEPLOYMENT_ENV"
echo "# Cloud Run" >> "$DEPLOYMENT_ENV"
echo "SERVICE_ACCOUNT=\${CLOUD_RUN_SA}" >> "$DEPLOYMENT_ENV"
echo "IMAGE=gcr.io/$(jq -r '.PROJECT_ID' /tmp/deployment_vars.json)/llamaindex-ingestion" >> "$DEPLOYMENT_ENV"

# Add database credentials (these should be set manually or from secrets)
echo "" >> "$DEPLOYMENT_ENV"
echo "# Database Credentials (set these manually)" >> "$DEPLOYMENT_ENV"
echo "DB_USER=opieuser" >> "$DEPLOYMENT_ENV"
echo "DB_PASS=CHANGE_ME" >> "$DEPLOYMENT_ENV"

# Clean up
rm /tmp/deployment_vars.json

echo "Generated $DEPLOYMENT_ENV from Terraform outputs"
echo "Review and update database credentials as needed"
