#!/bin/bash
# Generate deployment.env from Terraform outputs
# Usage: ./deploy/generate-deployment-env.sh

set -euo pipefail

TERRAFORM_DIR="infra/envs/prod"
DEPLOYMENT_ENV="deploy/deployment.env"

echo "Generating deployment.env from Terraform outputs..."

# Get Terraform outputs in JSON format
cd "$TERRAFORM_DIR"
terraform output -json > /tmp/terraform_outputs.json
cd - > /dev/null

# Extract deployment_vars and other important outputs
jq -r '.deployment_vars.value | to_entries[] | "\(.key)=\(.value)"' /tmp/terraform_outputs.json > "$DEPLOYMENT_ENV"

# Add additional important outputs
echo "" >> "$DEPLOYMENT_ENV"
echo "# Additional Terraform Outputs" >> "$DEPLOYMENT_ENV"
echo "DB_CONNECTION_NAME=$(jq -r '.db_connection_name.value' /tmp/terraform_outputs.json)" >> "$DEPLOYMENT_ENV"
echo "DB_PUBLIC_IP=$(jq -r '.db_public_ip.value' /tmp/terraform_outputs.json)" >> "$DEPLOYMENT_ENV"
echo "VM_EXTERNAL_IP=$(jq -r '.vm_external_ip.value' /tmp/terraform_outputs.json)" >> "$DEPLOYMENT_ENV"

# Add header comment
echo "# Generated from Terraform outputs - DO NOT EDIT MANUALLY" > "$DEPLOYMENT_ENV.tmp"
echo "# Generated on: $(date)" >> "$DEPLOYMENT_ENV.tmp"
echo "" >> "$DEPLOYMENT_ENV.tmp"
cat "$DEPLOYMENT_ENV" >> "$DEPLOYMENT_ENV.tmp"
mv "$DEPLOYMENT_ENV.tmp" "$DEPLOYMENT_ENV"

# Add service account emails (these are generated by Terraform)
echo "" >> "$DEPLOYMENT_ENV"
echo "# Service Accounts (generated by Terraform)" >> "$DEPLOYMENT_ENV"
echo "CLOUD_RUN_SA=cloud-run@$(jq -r '.deployment_vars.value.PROJECT_ID' /tmp/terraform_outputs.json).iam.gserviceaccount.com" >> "$DEPLOYMENT_ENV"
echo "GITHUB_ACTIONS_SA=github-actions@$(jq -r '.deployment_vars.value.PROJECT_ID' /tmp/terraform_outputs.json).iam.gserviceaccount.com" >> "$DEPLOYMENT_ENV"
echo "STORAGE_SA=bh-opie-storage@$(jq -r '.deployment_vars.value.PROJECT_ID' /tmp/terraform_outputs.json).iam.gserviceaccount.com" >> "$DEPLOYMENT_ENV"
echo "SQL_BACKUP_SA=sql-backup@$(jq -r '.deployment_vars.value.PROJECT_ID' /tmp/terraform_outputs.json).iam.gserviceaccount.com" >> "$DEPLOYMENT_ENV"
echo "CLOUD_STORAGE_BACKUP_SA=cloud-storage-backup@$(jq -r '.deployment_vars.value.PROJECT_ID' /tmp/terraform_outputs.json).iam.gserviceaccount.com" >> "$DEPLOYMENT_ENV"

# Add Cloud Run specific variables
echo "" >> "$DEPLOYMENT_ENV"
echo "# Cloud Run" >> "$DEPLOYMENT_ENV"
echo "SERVICE_ACCOUNT=\${CLOUD_RUN_SA}" >> "$DEPLOYMENT_ENV"
echo "IMAGE=gcr.io/$(jq -r '.deployment_vars.value.PROJECT_ID' /tmp/terraform_outputs.json)/llamaindex-ingestion" >> "$DEPLOYMENT_ENV"

# Add database credentials (these should be set manually or from secrets)
echo "" >> "$DEPLOYMENT_ENV"
echo "# Database Credentials (set these manually)" >> "$DEPLOYMENT_ENV"
echo "DB_USER=opieuser" >> "$DEPLOYMENT_ENV"
echo "DB_PASS=CHANGE_ME" >> "$DEPLOYMENT_ENV"

# Add additional environment variables for Cloud Run service (from Terraform)
echo "" >> "$DEPLOYMENT_ENV"
echo "# Cloud Run Service Environment Variables" >> "$DEPLOYMENT_ENV"
echo "GOOGLE_APPLICATION_CREDENTIALS=.gcp/creds/bh-opie/storage.json" >> "$DEPLOYMENT_ENV"
echo "GCS_BUCKET_NAME=\${MEDIA_BUCKET}" >> "$DEPLOYMENT_ENV"
echo "GCS_PREFIX=$(jq -r '.deployment_vars.value.GCS_PREFIX' /tmp/terraform_outputs.json)" >> "$DEPLOYMENT_ENV"
echo "POSTGRES_URL=postgresql://\${DB_USER}:\${DB_PASS}@\${DB_CONNECTION_NAME}/cloudsql/\${DB_CONNECTION_NAME}/\${DB_NAME}" >> "$DEPLOYMENT_ENV"
echo "PGVECTOR_SCHEMA=$(jq -r '.deployment_vars.value.PGVECTOR_SCHEMA' /tmp/terraform_outputs.json)" >> "$DEPLOYMENT_ENV"
echo "PGVECTOR_TABLE=$(jq -r '.deployment_vars.value.PGVECTOR_TABLE' /tmp/terraform_outputs.json)" >> "$DEPLOYMENT_ENV"
echo "VAULT_PGVECTOR_TABLE=$(jq -r '.deployment_vars.value.VAULT_PGVECTOR_TABLE' /tmp/terraform_outputs.json)" >> "$DEPLOYMENT_ENV"
echo "DJANGO_API_URL=$(jq -r '.deployment_vars.value.DJANGO_API_URL' /tmp/terraform_outputs.json)" >> "$DEPLOYMENT_ENV"
echo "LOCAL_DEVELOPMENT=$(jq -r '.deployment_vars.value.LOCAL_DEVELOPMENT' /tmp/terraform_outputs.json)" >> "$DEPLOYMENT_ENV"
echo "CLOUD_RUN_SERVICE_URL=https://llamaindex-ingestion-$(jq -r '.deployment_vars.value.PROJECT_ID' /tmp/terraform_outputs.json).us-central1.run.app" >> "$DEPLOYMENT_ENV"

# Add secrets that should be set manually
echo "" >> "$DEPLOYMENT_ENV"
echo "# Secrets (set these manually in Secret Manager)" >> "$DEPLOYMENT_ENV"
echo "# OPENAI_API_KEY=sk-proj-..." >> "$DEPLOYMENT_ENV"
echo "# DJANGO_API_KEY=LYAnn7dl..." >> "$DEPLOYMENT_ENV"

# Clean up
rm /tmp/terraform_outputs.json

echo "Generated $DEPLOYMENT_ENV from Terraform outputs"
echo "Review and update database credentials as needed"
