#!/bin/bash
# Provision a GCP VM and deploy Django, Redis, and Yjs using Docker Compose
# Usage: bash deploy/provision-vm-and-deploy.sh
set -euo pipefail

# Look for deployment.env in project root (generated by Terraform)
DEPLOY_ENV="$(dirname "$0")/../deployment.env"
if [ -f "$DEPLOY_ENV" ]; then
  echo "Sourcing deployment environment from $DEPLOY_ENV"
  set -a
  source "$DEPLOY_ENV"
  set +a
else
  echo "Warning: deployment.env not found. Run './deploy/generate-deployment-env.sh' first."
  echo "Using default values..."
fi

VM_NAME=${VM_NAME:-opie-stack-vm}
ZONE=${ZONE:-australia-southeast1}
MACHINE_TYPE=${MACHINE_TYPE:-e2-medium}
IMAGE_FAMILY=${IMAGE_FAMILY:-ubuntu-2204-lts}
IMAGE_PROJECT=${IMAGE_PROJECT:-ubuntu-os-cloud}
PROJECT_ID=${PROJECT_ID:-bh-opie}

# 1. Create the VM if it doesn't exist
if ! gcloud compute instances describe "$VM_NAME" --zone="$ZONE" --project="$PROJECT_ID" >/dev/null 2>&1; then
  echo "Creating VM $VM_NAME in $ZONE..."
  gcloud compute instances create "$VM_NAME" \
    --zone="$ZONE" \
    --machine-type="$MACHINE_TYPE" \
    --image-family="$IMAGE_FAMILY" \
    --image-project="$IMAGE_PROJECT" \
    --boot-disk-size=30GB \
    --tags=http-server,https-server \
    --project="$PROJECT_ID"
else
  echo "VM $VM_NAME already exists. Skipping creation."
fi

# 2. Project code deployment is now handled by GitHub Actions via SSH
# This script only provisions the VM and installs Docker/Docker Compose.
# Ensure you have set up SSH keys for automated GitHub Actions deployments.

echo ""
echo "VM provisioning complete."
echo "Project files will be deployed to the VM using GitHub Actions and SSH."

if [ ! -f "$HOME/.ssh/google_compute_engine" ]; then
  echo "Generating SSH key for gcloud..."
  gcloud compute ssh "$VM_NAME" --zone="$ZONE" --project="$PROJECT_ID" --command="exit"
fi

echo "\nVM is ready for code deployment via GitHub Actions and SSH."

# 3. Install Docker and Docker Compose on the VM
STARTUP_SCRIPT=$(cat <<'EOS'
sudo apt-get update
sudo apt-get install -y docker.io docker-compose
sudo usermod -aG docker $USER
EOS
)

echo "Running setup commands on VM..."
gcloud compute ssh "ubuntu@$VM_NAME" --zone="$ZONE" --project="$PROJECT_ID" --command="$STARTUP_SCRIPT"

echo "VM setup complete. Deploy your code and start containers using GitHub Actions or your CI/CD system."
