openapi: 3.0.3
info:
  title: Ben Heath SaaS
  version: 0.1.0
  description: BH Blockchain Analytics Platform
paths:
  /a/{team_slug}/team/api/invitations/:
    get:
      operationId: invitations_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: path
        name: team_slug
        schema:
          type: string
        required: true
      tags:
      - teams
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedInvitationList'
          description: ''
    post:
      operationId: invitations_create
      parameters:
      - in: path
        name: team_slug
        schema:
          type: string
        required: true
      tags:
      - teams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Invitation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Invitation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Invitation'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      - ApiKeyAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invitation'
          description: ''
  /a/{team_slug}/team/api/invitations/{id}/:
    get:
      operationId: invitations_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this invitation.
        required: true
      - in: path
        name: team_slug
        schema:
          type: string
        required: true
      tags:
      - teams
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invitation'
          description: ''
    put:
      operationId: invitations_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this invitation.
        required: true
      - in: path
        name: team_slug
        schema:
          type: string
        required: true
      tags:
      - teams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Invitation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Invitation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Invitation'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invitation'
          description: ''
    patch:
      operationId: invitations_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this invitation.
        required: true
      - in: path
        name: team_slug
        schema:
          type: string
        required: true
      tags:
      - teams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedInvitation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedInvitation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedInvitation'
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invitation'
          description: ''
    delete:
      operationId: invitations_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this invitation.
        required: true
      - in: path
        name: team_slug
        schema:
          type: string
        required: true
      tags:
      - teams
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /api/auth/login/:
    post:
      operationId: api_auth_login_create
      description: Custom login view that checks if 2FA is enabled for the user.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Login'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      - ApiKeyAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
          description: ''
  /api/auth/logout/:
    get:
      operationId: api_auth_logout_retrieve
      description: |-
        Calls Django logout method and delete the Token object
        assigned to the current User object.

        Accepts/Returns nothing.
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      - ApiKeyAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
    post:
      operationId: api_auth_logout_create
      description: |-
        Calls Django logout method and delete the Token object
        assigned to the current User object.

        Accepts/Returns nothing.
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      - ApiKeyAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /api/auth/password/change/:
    post:
      operationId: api_auth_password_change_create
      description: |-
        Calls Django Auth SetPasswordForm save method.

        Accepts the following POST parameters: new_password1, new_password2
        Returns the success/fail message.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordChange'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordChange'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordChange'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /api/auth/register/:
    post:
      operationId: api_auth_register_create
      description: |-
        Registers a new user.

        Accepts the following POST parameters: username, email, password1, password2.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Register'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Register'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Register'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      - ApiKeyAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JWT'
          description: ''
  /api/auth/token/refresh/:
    post:
      operationId: api_auth_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/auth/token/verify/:
    post:
      operationId: api_auth_token_verify_create
      description: |-
        Takes a token and indicates if it is valid.  This view provides no
        information about a token's fitness for a particular use.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenVerify'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenVerify'
          description: ''
  /api/auth/user/:
    get:
      operationId: api_auth_user_retrieve
      description: |-
        Reads and updates UserModel fields
        Accepts GET, PUT, PATCH methods.

        Default accepted fields: username, first_name, last_name
        Default display fields: pk, username, email, first_name, last_name
        Read-only fields: pk, email

        Returns UserModel fields.
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
    put:
      operationId: api_auth_user_update
      description: |-
        Reads and updates UserModel fields
        Accepts GET, PUT, PATCH methods.

        Default accepted fields: username, first_name, last_name
        Default display fields: pk, username, email, first_name, last_name
        Read-only fields: pk, email

        Returns UserModel fields.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomUser'
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
    patch:
      operationId: api_auth_user_partial_update
      description: |-
        Reads and updates UserModel fields
        Accepts GET, PUT, PATCH methods.

        Default accepted fields: username, first_name, last_name
        Default display fields: pk, username, email, first_name, last_name
        Read-only fields: pk, email

        Returns UserModel fields.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCustomUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCustomUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCustomUser'
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
  /api/auth/verify-otp/:
    post:
      operationId: api_auth_verify_otp_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OtpRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OtpRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OtpRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      - ApiKeyAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JWT'
          description: ''
  /dashboard/api/user-signups/:
    get:
      operationId: dashboard_api_user_signups_list
      tags:
      - dashboard
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserSignupStats'
          description: ''
  /teams/api/teams/:
    get:
      operationId: teams_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - teams
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTeamList'
          description: ''
    post:
      operationId: teams_create
      tags:
      - teams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Team'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Team'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Team'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      - ApiKeyAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
          description: ''
  /teams/api/teams/{id}/:
    get:
      operationId: teams_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this team.
        required: true
      tags:
      - teams
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
          description: ''
    put:
      operationId: teams_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this team.
        required: true
      tags:
      - teams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Team'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Team'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Team'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
          description: ''
    patch:
      operationId: teams_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this team.
        required: true
      tags:
      - teams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTeam'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTeam'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTeam'
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
          description: ''
    delete:
      operationId: teams_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this team.
        required: true
      tags:
      - teams
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    CustomUser:
      type: object
      description: |-
        Basic serializer to pass CustomUser details to the front end.
        Extend with any fields your app needs.
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        avatar_url:
          type: string
          readOnly: true
        get_display_name:
          type: string
          readOnly: true
      required:
      - avatar_url
      - get_display_name
      - id
    Invitation:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        team:
          type: integer
        email:
          type: string
          format: email
          maxLength: 254
        role:
          $ref: '#/components/schemas/RoleEnum'
        invited_by:
          type: string
          readOnly: true
        is_accepted:
          type: boolean
      required:
      - email
      - id
      - invited_by
      - team
    JWT:
      type: object
      description: Serializer for JWT authentication.
      properties:
        access:
          type: string
        refresh:
          type: string
        user:
          $ref: '#/components/schemas/CustomUser'
      required:
      - access
      - refresh
      - user
    Login:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
      required:
      - password
    LoginResponse:
      type: object
      properties:
        status:
          type: string
        detail:
          type: string
        jwt:
          $ref: '#/components/schemas/JWT'
        temp_otp_token:
          type: string
      required:
      - detail
      - status
    Membership:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user_id:
          type: integer
          readOnly: true
        first_name:
          type: string
          readOnly: true
        last_name:
          type: string
          readOnly: true
        display_name:
          type: string
          readOnly: true
        role:
          $ref: '#/components/schemas/RoleEnum'
      required:
      - display_name
      - first_name
      - id
      - last_name
      - role
      - user_id
    OtpRequest:
      type: object
      properties:
        temp_otp_token:
          type: string
        otp:
          type: string
      required:
      - otp
      - temp_otp_token
    PaginatedInvitationList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Invitation'
    PaginatedTeamList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Team'
    PasswordChange:
      type: object
      properties:
        new_password1:
          type: string
          maxLength: 128
        new_password2:
          type: string
          maxLength: 128
      required:
      - new_password1
      - new_password2
    PatchedCustomUser:
      type: object
      description: |-
        Basic serializer to pass CustomUser details to the front end.
        Extend with any fields your app needs.
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        avatar_url:
          type: string
          readOnly: true
        get_display_name:
          type: string
          readOnly: true
    PatchedInvitation:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        team:
          type: integer
        email:
          type: string
          format: email
          maxLength: 254
        role:
          $ref: '#/components/schemas/RoleEnum'
        invited_by:
          type: string
          readOnly: true
        is_accepted:
          type: boolean
    PatchedTeam:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        slug:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        members:
          type: array
          items:
            $ref: '#/components/schemas/Membership'
          readOnly: true
        invitations:
          type: array
          items:
            $ref: '#/components/schemas/Invitation'
          readOnly: true
        dashboard_url:
          type: string
          readOnly: true
        is_admin:
          type: boolean
          readOnly: true
        subscription:
          allOf:
          - $ref: '#/components/schemas/Subscription'
          readOnly: true
        has_active_subscription:
          type: boolean
          readOnly: true
    Price:
      type: object
      properties:
        id:
          type: string
          maxLength: 255
        product_name:
          type: string
        human_readable_price:
          type: string
          readOnly: true
        payment_amount:
          type: string
          readOnly: true
        nickname:
          type: string
          description: A brief description of the plan, hidden from customers.
          maxLength: 250
        unit_amount:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          nullable: true
          description: The unit amount in cents to be charged, represented as a whole
            integer if possible. Null if a sub-cent precision is required.
      required:
      - human_readable_price
      - id
      - payment_amount
      - product_name
    Register:
      type: object
      properties:
        username:
          type: string
          maxLength: 150
          minLength: 1
        email:
          type: string
          format: email
        password1:
          type: string
          writeOnly: true
        password2:
          type: string
          writeOnly: true
      required:
      - email
      - password1
      - password2
    RestAuthDetail:
      type: object
      properties:
        detail:
          type: string
          readOnly: true
      required:
      - detail
    RoleEnum:
      enum:
      - admin
      - member
      type: string
      description: |-
        * `admin` - Administrator
        * `member` - Member
    StatusEnum:
      enum:
      - active
      - canceled
      - incomplete
      - incomplete_expired
      - past_due
      - trialing
      - unpaid
      type: string
      description: |-
        * `active` - Active
        * `canceled` - Canceled
        * `incomplete` - Incomplete
        * `incomplete_expired` - Incomplete Expired
        * `past_due` - Past due
        * `trialing` - Trialing
        * `unpaid` - Unpaid
    Subscription:
      type: object
      description: A serializer for Subscriptions which uses the SubscriptionWrapper
        object under the hood
      properties:
        id:
          type: string
          maxLength: 255
        display_name:
          type: string
        start_date:
          type: string
          format: date-time
          nullable: true
          description: Date when the subscription was first created. The date might
            differ from the created date due to backdating.
        billing_interval:
          type: string
        current_period_start:
          type: string
          format: date-time
          description: Start of the current period for which the subscription has
            been invoiced.
        current_period_end:
          type: string
          format: date-time
          description: End of the current period for which the subscription has been
            invoiced. At the end of this period, a new invoice will be created.
        cancel_at_period_end:
          type: boolean
          description: If the subscription has been canceled with the ``at_period_end``
            flag set to true, ``cancel_at_period_end`` on the subscription will be
            true. You can use this attribute to determine whether a subscription that
            has a status of active is scheduled to be canceled at the end of the current
            period.
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          description: |-
            The status of this subscription.

            * `active` - Active
            * `canceled` - Canceled
            * `incomplete` - Incomplete
            * `incomplete_expired` - Incomplete Expired
            * `past_due` - Past due
            * `trialing` - Trialing
            * `unpaid` - Unpaid
        quantity:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: The quantity applied to this subscription. This value will
            be `null` for multi-plan subscriptions
        items:
          type: array
          items:
            $ref: '#/components/schemas/SubscriptionItem'
      required:
      - billing_interval
      - current_period_end
      - current_period_start
      - display_name
      - id
      - items
      - status
    SubscriptionItem:
      type: object
      properties:
        id:
          type: string
          maxLength: 255
        price:
          $ref: '#/components/schemas/Price'
        quantity:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: The quantity of the plan to which the customer should be subscribed.
      required:
      - id
      - price
    Team:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        slug:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        members:
          type: array
          items:
            $ref: '#/components/schemas/Membership'
          readOnly: true
        invitations:
          type: array
          items:
            $ref: '#/components/schemas/Invitation'
          readOnly: true
        dashboard_url:
          type: string
          readOnly: true
        is_admin:
          type: boolean
          readOnly: true
        subscription:
          allOf:
          - $ref: '#/components/schemas/Subscription'
          readOnly: true
        has_active_subscription:
          type: boolean
          readOnly: true
      required:
      - dashboard_url
      - has_active_subscription
      - id
      - invitations
      - is_admin
      - members
      - name
      - subscription
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    TokenVerify:
      type: object
      properties:
        token:
          type: string
          writeOnly: true
      required:
      - token
    UserSignupStats:
      type: object
      properties:
        date:
          type: string
          format: date
        count:
          type: integer
      required:
      - count
      - date
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: Authorization
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
