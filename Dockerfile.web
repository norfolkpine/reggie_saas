# syntax = docker/dockerfile:1.5
# Highly optimized multi-stage Docker buildfile for reggie-web

# Stage 1: Build Python dependencies
FROM python:3.12-slim-bookworm as build-python
RUN apt-get update \
    && apt-get install -y --no-install-recommends build-essential libpq-dev \
    && rm -rf /var/lib/apt/lists/*
COPY ./requirements /requirements
RUN pip wheel --no-deps --wheel-dir /wheels -r /requirements/requirements.txt

# Stage 2: Build frontend assets
FROM node:22-bookworm-slim AS build-node
WORKDIR /code
COPY package*.json .babelrc ./
RUN npm ci
COPY assets ./assets/
COPY api-client ./api-client/
COPY . .
RUN npm run build

# Stage 3: Final image
FROM python:3.12-slim-bookworm
ENV PATH="/opt/venv/bin:$PATH"

# Install only runtime OS dependencies
RUN apt-get update \
    && apt-get install -y --no-install-recommends libmagic1 gettext \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user
RUN addgroup --system django && adduser --system --ingroup django --home /home/django django
RUN mkdir -p /home/django && chown django:django /home/django

# Install Python dependencies
COPY --from=build-python /wheels /wheels
COPY ./requirements /requirements
RUN pip install --no-cache-dir --find-links=/wheels -r /requirements/requirements.txt && rm -rf /wheels

WORKDIR /code

# Copy only the minimum required files for runtime
COPY --chown=django:django manage.py /code/
COPY --chown=django:django bh_reggie /code/bh_reggie
COPY --chown=django:django apps /code/apps
COPY --chown=django:django requirements /requirements
COPY --from=build-node /code/static /code/static
COPY --chown=django:django docker_startup.sh /start

RUN mkdir -p /code/logs && chown django:django /code/logs
RUN python /code/manage.py collectstatic --noinput --settings=bh_reggie.settings
RUN chown django:django -R /code/staticfiles
RUN mkdir -p /code/ssl && chown django:django /code/ssl

USER django
RUN chmod +x /start
CMD /start
